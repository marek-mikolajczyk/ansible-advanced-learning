vi:
set et ts=2 sts=2 sw=2
set number
set paste

install:
- json_pp - for tower api |json_pp chapter 11. rpm: perl-JSON-PP
- pip install ansible-tower-cli
- pip install ansible-lint, yamllint
- yum install -y python3-dns python3-netaddr


clean yaml
- : not = long lines
- modules instead of shell
- clear variables name 
- vars namespace - prefix variables with role name
- dynamic inventories, group_by
- duplicated group vars - last wins
- use block to rescue
- tools: ansible-lint, yamllint
project structured
.
├── dbservers.yml
├── inventories/
│ ├── prod/
│ │ ├── group_vars/
│ │ ├── host_vars/
│ │ └── inventory/
│ └── stage/
│ ├── group_vars/
│ ├── host_vars/
│ └── inventory/
├── roles/
│ └── std_server/
├── site.yml
├── storage.yml
└── webservers.yml

git 
modified - modified, different from git
staged - ready to commit
commited


configure git
git config --global -l
~/.gitconfig

git init --bare --shared=true - no working tree
git config --global push.default simple
git config --global -l - lists all settings

git status
git log
git show <commit hash>

git rev-parse  HEAD - get current commit
git rev-parse --short HEAD

git rm - deletes file from local dir, and 
git reset - removes file from staging area
git revert commit_ref - 
git rever --no-edit HEAD

git pull - fetches commits, merges changes into files

# branches
HEAD - current commit in local

### switch branch
git checkout 

- create new branch and work there
git branch <new branch> - creates new branch, but doesn't make it HEAD
- move HEAD to new branch
git checkout 
- checkout to master and merge

# creates branch from old commit 
- git checkout <old short commit >

### merge branched
push to dev
checkout to main
git merge dev

### old commits
git checkout <id>

git push --set-upstream origin <original repo> feature/2 <branch>



### submodules

don't use submodules.
add roles/*/* to gitignore
to exclude all downladed from galaxy
